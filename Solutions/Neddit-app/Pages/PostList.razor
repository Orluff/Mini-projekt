@inherits LayoutComponentBase

@using Neddit_app.Data;
@using shared.Model;
@inject ApiService apiService

@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@if (posts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table>
        <tr>
            <th>Title</th>
            <th>Content</th>
            <th colspan="3">Votes</th>
        </tr>
        @foreach (var post in posts)
        {
            <tr>
                <!-- 
                    These a href links will match the route in the page 'PostItem.razor'.
                    The route is defined as "/post/{id}" and the id is the post id.
                -->
                <td><a href="/post/@post.Id">@post.header</a></td>
                <td>@post.text</td>
                <td>@(post.votes)</td>
                <td><button @onclick="() => Upvote(post.Id)">Upvote</button></td>
                <td><button @onclick="() => Downvote(post.Id)">Downvote</button></td>
            </tr>
        }
    </table>

    <br/>
}

@code {
    private ThreadPost[]? posts;
    private ThreadPost? votePost;

    protected override async Task OnInitializedAsync()
    {
        posts = await apiService.GetPosts();
    }

    private async Task Upvote(int id)
    {
        await apiService.UpvotePost(id);
        
        posts = (await apiService.GetPosts());
        StateHasChanged();
    }

    private async Task Downvote(int id)
    {
        await apiService.DownvotePost(id);
        
        posts = (await apiService.GetPosts());
        StateHasChanged();
    }
}
